//
//  XLViewController.m
//  C_Protocol
//
//  Created by JY on 14-1-6.
//  Copyright (c) 2014年 XLDZ. All rights reserved.
//
#import "XLViewController.h"
#import "XL3761UnPack.h"
#import "XL3761PackFrame.h"

#import "XLParser.h"
#import "XLSocketManager.h"



@interface XLViewController ()

@property (nonatomic,strong) NSMutableData *recvdata;

@end

@implementation XLViewController


- (void)viewDidLoad
{
    [super viewDidLoad];
    
    /*组帧测试调用
     
    XL_UINT16 outlen = 0;
    
    PACKITEM array[2];

    PACKITEM item;
    item.fn = 51;item.pn = 1;
    item.datalen = 2;
    item.data[0] = 1;item.data[1] = 14;
    item.shouldUseByte = 0;
    array[0] = item;
    
    PACKITEM item1;
    item1.fn = 49;item1.pn = 1;
    item1.datalen = 3;
    item1.data[0] = 13;item1.data[1] = 1;item1.data[2] = 14;
    item1.shouldUseByte = 0;
    array[1] = item1;

    
    Byte *frame = PackFrame(0x0d, array, 2,&outlen);
    
    Byte* frame1 = PackFrameWithDadt(0x0c, 1, 25, &outlen);
    
    Byte* frame2 = PackFrameWithTdm(0x0d, 1, 51, 14, 1, &outlen);
    
    Byte* frame3 = PackFrameWithTdd(0x0d, 1, 49, 14, 1, 20, &outlen);
    
    Byte* frame4 = PackFrameWithTdc(0x0d, 1, 89, 14, 1, 20, 12, 24, 30, 48, &outlen);
    
    NSData *data = [NSData dataWithBytes:frame length:outlen];
    NSLog(@"%@",[data description]);
    
    free(frame);*/
    
    self.recvdata = [NSMutableData data];
    [self didReceiveBytes];
    
}

-(void)didReceiveBytes{
    //测试报文 AFND F49   len29
    //    Byte revbytes[] = {0x68,0x56,0x00,0x56,0x00,0x68,
    //        0xA8,
    //        0x25,0x25,
    //        0x01,0x00,
    //        0x04,
    //        0x0D,
    //        0x60,
    //        0x00,0x00,
    //        0x01,0x06,
    //        0x03,0x07,0x12,
    //        0x95,0x05,
    //        0x25,0x00,
    //        0x12,0x00,
    //        0x58,0x16};
    
    
    //测试报文AFND F49 F51   len37
    //    Byte revbytes[] = {0x68,0x76,0x00,0x76,0x00,0x68,
    //        0x88,
    //        0x00,0x25,
    //        0x01,0x00,
    //        0x04,
    //        0x0D,
    //        0x64,
    //        0x00,0x00,0x04,0x06,
    //        0x01,0x14,0xCB,0x00,0x03,0x00,
    //        0x00,0x00,0x01,0x06,
    //        0x15,0x01,0x14,0x33,0x00,0x01,0x00,
    //        0x75,0x16};
    
    
    //测试报文 AFND F1  114
//        Byte revbytes[] = {0x68 ,0xAA ,0x01 ,0xAA ,0x01 ,0x68 ,0x88 ,0x00 ,0x25 ,0x01 ,0x00 ,0x04 ,0x0D ,0x64 ,0x01 ,0x01 ,0x01 ,0x00 ,0x15 ,0x01 ,0x14 ,0x20 ,0x15 ,0x15 ,0x01 ,0x14 ,0x04 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x88 ,0x77 ,0x77 ,0x77 ,0x77 ,0x77 ,0x77 ,0x77 ,0x77 ,0x77 ,0x77 ,0x77 ,0x77 ,0x77 ,0x77 ,0x77 ,0x77 ,0x77 ,0x77 ,0x77 ,0x77 ,0x66 ,0x66 ,0x66 ,0x66 ,0x66 ,0x66 ,0x66 ,0x66 ,0x66 ,0x66 ,0x66 ,0x66 ,0x66 ,0x66 ,0x66 ,0x66 ,0x66 ,0x66 ,0x66 ,0x66 ,0x55 ,0x55 ,0x55 ,0x55 ,0x55 ,0x55 ,0x55 ,0x55 ,0x55 ,0x55 ,0x55 ,0x55 ,0x55 ,0x55 ,0x55 ,0x55 ,0x55 ,0x7C ,0x16};
    
    //测试报文 事件ERC1   40
    Byte revbytes[] = {0x68 ,0x82 ,0x00 ,0x82 ,0x00 ,0x68 ,
        0x88 ,
        0x00 ,0x25 ,0x01 ,0x00 ,0x04 ,
        0x0E ,
        0x61 ,
        0x00 ,0x00 ,0x01 ,0x00 ,
        0x01 ,
        0x01 ,
        0x00 ,
        0x01 ,
        0x01 ,0x0E ,
        0x35 ,0x10 ,0x16 ,0x01 ,0x14 ,
        0x02 ,
        0x32 ,0x2E ,0x30 ,0x31 ,
        0x32 ,0x2E ,0x30 ,0x32 ,
        0x29 ,0x16};
    
 
    
    unsigned short type = 0;
    unsigned short inlen = 40;
    unsigned short outlen = 0;
    Byte *outbuff = NULL;
    int  multiFrameFlag = 0;    //多帧标志
    
    if(UnPackFrame(&type,inlen, revbytes, &outlen, &outbuff,&multiFrameFlag)){
        
        [self.recvdata appendBytes:outbuff length:outlen];
        
        if (!multiFrameFlag) {
            XLParser *parser = [[XLParser alloc] init];
            [parser initWithNSData:self.recvdata];
        }
    } else {
        NSLog(@"error");
    }
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
}
@end
